# Generated by Django 5.2.1 on 2025-07-09 10:52

import colorfield.fields
import django.core.validators
import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("logo", models.ImageField(blank=True, null=True, upload_to="brands/")),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="نام رنگ"
                    ),
                ),
                (
                    "hex_code",
                    colorfield.fields.ColorField(
                        default="#FFFFFF",
                        help_text=" مثال: #FFFFFF",
                        image_field=None,
                        max_length=7,
                        samples=[
                            ("#FFFFFF", "white"),
                            ("#000000", "black"),
                            ("#FF0000", "red"),
                            ("#008000", "green"),
                            ("#0000FF", "blue"),
                        ],
                        verbose_name="کد هگز رنگ",
                    ),
                ),
            ],
            options={
                "verbose_name": "رنگ",
                "verbose_name_plural": "colors",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Warranty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="نام گارانتی")),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="شرکت ارائه دهنده",
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        help_text="مدت زمان گارانتی به ماه",
                        verbose_name="مدت گارانتی (ماه)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="فعال")),
                ("description", models.TextField(blank=True, verbose_name="توضیحات")),
                (
                    "terms_conditions",
                    models.TextField(blank=True, verbose_name="شرایط و ضوابط"),
                ),
                (
                    "support_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="شماره تماس پشتیبانی"
                    ),
                ),
                (
                    "registration_required",
                    models.BooleanField(
                        default=False,
                        help_text="آیا نیاز به ثبت گارانتی پس از خرید است؟",
                        verbose_name="نیاز به ثبت گارانتی",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="تاریخ ایجاد"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاریخ بروزرسانی"),
                ),
            ],
            options={
                "verbose_name": "گارانتی",
                "verbose_name_plural": "گارانتی\u200cها",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="store.brand",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="store.category",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="products/"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="store.brand",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="products", to="store.category"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "option_price",
                    models.PositiveIntegerField(
                        help_text="قیمت به تومان برای محصول با این ویژگی"
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        verbose_name=django.core.validators.MinValueValidator(0),
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_active_discount", models.BooleanField(default=False)),
                (
                    "discount",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="درصد تخفیف",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("discount_start_date", models.DateTimeField(blank=True, null=True)),
                ("discount_end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="store.color",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="store.product",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="product_option",
                        to="accounts.provider",
                        verbose_name="تامین کننده ",
                    ),
                ),
                (
                    "warranty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="product_options",
                        to="store.warranty",
                        verbose_name="گارانتی",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Gallery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="product_gallery/")),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery",
                        to="store.productoption",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Specification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="نام مشخصه")),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True, blank=True, max_length=120, unique=True
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("int", "عدد صحیح"),
                            ("decimal", "عدد اعشاری"),
                            ("str", "متن"),
                            ("bool", "بله/خیر"),
                        ],
                        max_length=20,
                        verbose_name="نوع داده",
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="واحد"
                    ),
                ),
                (
                    "is_main",
                    models.BooleanField(
                        default=False,
                        help_text="مشخصه اصلی برای محصولات است",
                        verbose_name="مشخصه اصلی",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spec_definitions",
                        to="store.category",
                        verbose_name="دسته\u200cبندی",
                    ),
                ),
            ],
            options={
                "verbose_name": "مشخصه",
                "verbose_name_plural": "مشخصات",
                "unique_together": {("category", "name")},
            },
        ),
        migrations.CreateModel(
            name="ProductSpecification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "int_value",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="مقدار عددی"
                    ),
                ),
                (
                    "decimal_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="مقدار اعشاری",
                    ),
                ),
                (
                    "str_value",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="مقدار متنی"
                    ),
                ),
                (
                    "bool_value",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="مقدار بله/خیر"
                    ),
                ),
                (
                    "is_main",
                    models.BooleanField(
                        default=False,
                        help_text="مشخصه اصلی برای محصول است",
                        verbose_name="مشخصه اصلی",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spec_values",
                        to="store.product",
                        verbose_name="محصول",
                    ),
                ),
                (
                    "specification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="store.specification",
                        verbose_name="مشخصه",
                    ),
                ),
            ],
            options={
                "verbose_name": "مقدار مشخصه محصول",
                "verbose_name_plural": "مقادیر مشخصات محصول",
                "unique_together": {("product", "specification")},
            },
        ),
        migrations.AddField(
            model_name="product",
            name="specifications",
            field=models.ManyToManyField(
                through="store.ProductSpecification",
                to="store.specification",
                verbose_name="مشخصات",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="tags",
            field=models.ManyToManyField(related_name="products", to="store.tag"),
        ),
    ]
