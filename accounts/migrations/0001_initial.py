# Generated by Django 5.2.1 on 2025-05-28 13:10

import accounts.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='شماره تلفن باید با +98 یا 09 شروع شده و 11 رقم باشد (مثلاً: +989123456789 یا 09123456789).', regex='^(?:\\+98|0)?9\\d{9}$')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('national_id', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='کد ملی باید دقیقاً 10 رقم باشد', regex='^\\d{10}$'), accounts.models.validate_national_id], verbose_name='کد ملی')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_address', models.CharField(max_length=50)),
                ('province', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('full_address', models.TextField()),
                ('postcode', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(10)])),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
